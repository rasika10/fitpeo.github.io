{"ast":null,"code":"// import * as React from \"react\";\n// import { useTheme } from \"@mui/material/styles\";\n// import { LineChart, axisClasses } from \"@mui/x-charts\";\n// import Title from \"./Title\";\n// // Generate Sales Data\n// function createData(time, amount) {\n//   return { time, amount: amount ?? null };\n// }\n// const data = [\n//   createData(\"00:00\", 0),\n//   createData(\"03:00\", 300),\n//   createData(\"06:00\", 600),\n//   createData(\"09:00\", 800),\n//   createData(\"12:00\", 1500),\n//   createData(\"15:00\", 2000),\n//   createData(\"18:00\", 2400),\n//   createData(\"21:00\", 2400),\n//   createData(\"24:00\"),\n// ];\n// export default function Chart() {\n//   const theme = useTheme();\n//   return (\n//     <React.Fragment>\n//       <Title>Today</Title>\n//       <div style={{ width: \"100%\", flexGrow: 1, overflow: \"hidden\" }}>\n//         <LineChart\n//           dataset={data}\n//           margin={{\n//             top: 16,\n//             right: 20,\n//             left: 70,\n//             bottom: 30,\n//           }}\n//           xAxis={[\n//             {\n//               scaleType: \"point\",\n//               dataKey: \"time\",\n//               tickNumber: 2,\n//               tickLabelStyle: theme.typography.body2,\n//             },\n//           ]}\n//           yAxis={[\n//             {\n//               label: \"Sales ($)\",\n//               labelStyle: {\n//                 ...theme.typography.body1,\n//                 fill: theme.palette.text.primary,\n//               },\n//               tickLabelStyle: theme.typography.body2,\n//               max: 2500,\n//               tickNumber: 3,\n//             },\n//           ]}\n//           series={[\n//             {\n//               dataKey: \"amount\",\n//               showMark: false,\n//               color: theme.palette.primary.light,\n//             },\n//           ]}\n//           sx={{\n//             [`.${axisClasses.root} line`]: {\n//               stroke: theme.palette.text.secondary,\n//             },\n//             [`.${axisClasses.root} text`]: {\n//               fill: theme.palette.text.secondary,\n//             },\n//             [`& .${axisClasses.left} .${axisClasses.label}`]: {\n//               transform: \"translateX(-25px)\",\n//             },\n//           }}\n//         />\n//       </div>\n//     </React.Fragment>\n//   );\n// }\nimport React from\"react\";import{Bar}from\"react-chartjs-2\";import{Chart,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from\"chart.js\";// Register the required components\nimport{jsx as _jsx}from\"react/jsx-runtime\";Chart.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const data={labels:[\"5\",\"9\",\"11\",\"15\",\"56\",\"12\",\"7\",\"5\",\"9\",\"11\",\"15\",\"56\",\"12\",\"7\",\"56\",\"12\",\"5\",\"5\",\"78\",\"8\",\"4\",\"1\",\"15\",\"12\",\"5\",\"5\",\"78\"],datasets:[{label:\"weekly Activity\",data:[5000,6000,7000,10000,8000,4000,15000,500,10000,15000,5000,5000,15000,5000,12000,15000,1400,12500,500,10000,15000,2000,5000,10000,4000,15000,2000,5000,2000,15000,500,10000,15000,2000,5000],backgroundColor:\"#7394FF\",borderRadius:50,// Rounded edges\nbarThickness:12}]};const options={responsive:true,plugins:{legend:{position:\"top\"},tooltip:{callbacks:{label:function(tooltipItem){return`Sales: ${tooltipItem.raw}`;}}}},scales:{x:{beginAtZero:false,grid:{display:false// Remove y-axis grid lines\n},ticks:{autoSkip:true}},y:{beginAtZero:true,ticks:{callback:function(value){if(value===0)return\"0\";if(value===5000)return\"5k\";if(value===10000)return\"10k\";if(value===15000)return\"15k\";return\"\";}}}}};const ChartB=()=>/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:\"90%\"},children:/*#__PURE__*/_jsx(Bar,{data:data,options:options,style:{width:\"95% !important\"}})});export default ChartB;","map":{"version":3,"names":["React","Bar","Chart","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","register","data","labels","datasets","label","backgroundColor","borderRadius","barThickness","options","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","raw","scales","x","beginAtZero","grid","display","ticks","autoSkip","y","callback","value","ChartB","style","width","height","children"],"sources":["C:/Users/Rasika/Documents/GitHub/Dashboard/fitpeo.github.io/src/Dashboard/Chart.js"],"sourcesContent":["// import * as React from \"react\";\r\n// import { useTheme } from \"@mui/material/styles\";\r\n// import { LineChart, axisClasses } from \"@mui/x-charts\";\r\n\r\n// import Title from \"./Title\";\r\n\r\n// // Generate Sales Data\r\n// function createData(time, amount) {\r\n//   return { time, amount: amount ?? null };\r\n// }\r\n\r\n// const data = [\r\n//   createData(\"00:00\", 0),\r\n//   createData(\"03:00\", 300),\r\n//   createData(\"06:00\", 600),\r\n//   createData(\"09:00\", 800),\r\n//   createData(\"12:00\", 1500),\r\n//   createData(\"15:00\", 2000),\r\n//   createData(\"18:00\", 2400),\r\n//   createData(\"21:00\", 2400),\r\n//   createData(\"24:00\"),\r\n// ];\r\n\r\n// export default function Chart() {\r\n//   const theme = useTheme();\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <Title>Today</Title>\r\n//       <div style={{ width: \"100%\", flexGrow: 1, overflow: \"hidden\" }}>\r\n//         <LineChart\r\n//           dataset={data}\r\n//           margin={{\r\n//             top: 16,\r\n//             right: 20,\r\n//             left: 70,\r\n//             bottom: 30,\r\n//           }}\r\n//           xAxis={[\r\n//             {\r\n//               scaleType: \"point\",\r\n//               dataKey: \"time\",\r\n//               tickNumber: 2,\r\n//               tickLabelStyle: theme.typography.body2,\r\n//             },\r\n//           ]}\r\n//           yAxis={[\r\n//             {\r\n//               label: \"Sales ($)\",\r\n//               labelStyle: {\r\n//                 ...theme.typography.body1,\r\n//                 fill: theme.palette.text.primary,\r\n//               },\r\n//               tickLabelStyle: theme.typography.body2,\r\n//               max: 2500,\r\n//               tickNumber: 3,\r\n//             },\r\n//           ]}\r\n//           series={[\r\n//             {\r\n//               dataKey: \"amount\",\r\n//               showMark: false,\r\n//               color: theme.palette.primary.light,\r\n//             },\r\n//           ]}\r\n//           sx={{\r\n//             [`.${axisClasses.root} line`]: {\r\n//               stroke: theme.palette.text.secondary,\r\n//             },\r\n//             [`.${axisClasses.root} text`]: {\r\n//               fill: theme.palette.text.secondary,\r\n//             },\r\n//             [`& .${axisClasses.left} .${axisClasses.label}`]: {\r\n//               transform: \"translateX(-25px)\",\r\n//             },\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\nimport React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register the required components\r\nChart.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst data = {\r\n  labels: [\r\n    \"5\",\r\n    \"9\",\r\n    \"11\",\r\n    \"15\",\r\n    \"56\",\r\n    \"12\",\r\n    \"7\",\r\n    \"5\",\r\n    \"9\",\r\n    \"11\",\r\n    \"15\",\r\n    \"56\",\r\n    \"12\",\r\n    \"7\",\r\n    \"56\",\r\n    \"12\",\r\n    \"5\",\r\n    \"5\",\r\n    \"78\",\r\n    \"8\",\r\n    \"4\",\r\n    \"1\",\r\n    \"15\",\r\n\r\n    \"12\",\r\n    \"5\",\r\n    \"5\",\r\n    \"78\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"weekly Activity\",\r\n      data: [\r\n        5000, 6000, 7000, 10000, 8000, 4000, 15000, 500, 10000, 15000, 5000,\r\n        5000, 15000, 5000, 12000, 15000, 1400, 12500, 500, 10000, 15000, 2000,\r\n        5000, 10000, 4000, 15000, 2000, 5000, 2000, 15000, 500, 10000, 15000,\r\n        2000, 5000,\r\n      ],\r\n      backgroundColor: \"#7394FF\",\r\n      borderRadius: 50, // Rounded edges\r\n\r\n      barThickness: 12,\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        label: function (tooltipItem) {\r\n          return `Sales: ${tooltipItem.raw}`;\r\n        },\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    x: {\r\n      beginAtZero: false,\r\n      grid: {\r\n        display: false, // Remove y-axis grid lines\r\n      },\r\n      ticks: {\r\n        autoSkip: true,\r\n      },\r\n    },\r\n\r\n    y: {\r\n      beginAtZero: true,\r\n\r\n      ticks: {\r\n        callback: function (value) {\r\n          if (value === 0) return \"0\";\r\n          if (value === 5000) return \"5k\";\r\n          if (value === 10000) return \"10k\";\r\n          if (value === 15000) return \"15k\";\r\n\r\n          return \"\";\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst ChartB = () => (\r\n  <div style={{ width: \"100%\", height: \"90%\" }}>\r\n    <Bar data={data} options={options} style={{ width: \"95% !important\" }} />\r\n  </div>\r\n);\r\n\r\nexport default ChartB;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}